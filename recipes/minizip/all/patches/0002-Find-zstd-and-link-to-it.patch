From 935a500c0f636ac84e924b00f07dc59982ab0df5 Mon Sep 17 00:00:00 2001
From: ItsBasi <5033630+ItsBasi@users.noreply.github.com>
Date: Fri, 14 Aug 2020 23:38:43 +0200
Subject: [PATCH] Find zstd and link to it

---
 CMakeLists.txt | 51 +++-----------------------------------------------
 1 file changed, 3 insertions(+), 48 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6d0bba5..d1fa9df 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -74,42 +74,7 @@ endif()
 
 # Check if zstd installation is present
 if(MZ_ZSTD)
-    if(NOT ZSTD_FORCE_FETCH)
-        find_package(ZSTD QUIET)
-    endif()
-    if(ZSTD_FOUND AND NOT ZSTD_FORCE_FETCH)
-        message(STATUS "Using ZSTD")
-        list(APPEND MINIZIP_INC ${ZSTD_INCLUDE_DIRS})
-        set(PC_PRIVATE_LIBS "${PC_PRIVATE_LIBS} -lzstd")
-    else()
-        if(NOT ZSTD_REPOSITORY)
-            set(ZSTD_REPOSITORY https://github.com/facebook/zstd)
-        endif()
-
-        message(STATUS "Fetching ZSTD ${ZSTD_REPOSITORY}")
-
-        if(${CMAKE_VERSION} VERSION_LESS "3.11")
-            message(FATAL_ERROR "CMake 3.11 required to fetch zlib")
-        else()
-            include(FetchContent)
-
-            set(ZSTD_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lib/zstd)
-
-            FetchContent_Declare(zstd
-                GIT_REPOSITORY ${ZSTD_REPOSITORY}
-                SOURCE_DIR ${ZSTD_SOURCE_DIR}
-                BINARY_DIR ${ZSTD_SOURCE_DIR})
-
-            FetchContent_GetProperties(zstd
-                POPULATED ZSTD_POPULATED)
-            if(NOT ZSTD_POPULATED)
-                FetchContent_Populate(zstd)
-                add_subdirectory(${ZSTD_SOURCE_DIR}/build/cmake ${ZSTD_BINARY_DIR} EXCLUDE_FROM_ALL)
-            endif()
-
-            list(APPEND MINIZIP_INC ${ZSTD_SOURCE_DIR}/lib)
-        endif()
-    endif()
+    find_package(zstd REQUIRED)
 endif()
 
 # Check if bzip2 installation is present
@@ -673,18 +638,8 @@ target_compile_definitions(${PROJECT_NAME} PRIVATE ${MINIZIP_DEF})
 if(TARGET ZLIB::ZLIB)
     target_link_libraries(${PROJECT_NAME} ZLIB::ZLIB)
 endif()
-if(MZ_ZSTD)
-    if(ZSTD_FOUND)
-        target_link_libraries(${PROJECT_NAME} ${ZSTD_LIBRARIES})
-    else()
-        # Have to add zlib to install targets
-        if(NOT DEFINED BUILD_SHARED_LIBS OR NOT ${BUILD_SHARED_LIBS})
-            set(ZSTD_TARGET libzstd_static)
-        else()
-            set(ZSTD_TARGET libzstd_shared)
-        endif()
-        target_link_libraries(${PROJECT_NAME} ${ZSTD_TARGET})
-    endif()
+if(TARGET zstd::zstd)
+	target_link_libraries(${PROJECT_NAME} zstd::zstd)
 endif()
 if(MZ_BZIP2 AND BZIP2_FOUND)
     target_link_libraries(${PROJECT_NAME} ${BZIP2_LIBRARIES})
-- 
2.28.0.windows.1


From b0a36172a549e64624fd4909776fbc895f62a6a1 Mon Sep 17 00:00:00 2001
From: ItsBasi <5033630+ItsBasi@users.noreply.github.com>
Date: Sat, 1 Aug 2020 22:50:33 +0200
Subject: [PATCH 6/9] Change variables names of dependencies to the one
 generated by conan

---
 CMakeLists.txt | 52 +++++++++++++++++++++++++-------------------------
 1 file changed, 26 insertions(+), 26 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4f29604..0aa5ac2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -38,8 +38,8 @@ if(POLICY CMP0074)
     cmake_policy(SET CMP0074 OLD)
 endif()
 # ZLIB_ROOT - Parent directory of zlib installation
-# BZIP2_ROOT - Parent directory of BZip2 installation
-# OPENSSL_ROOT - Parent directory of OpenSSL installation
+# BZip2_ROOT - Parent directory of BZip2 installation
+# OpenSSL_ROOT - Parent directory of OpenSSL installation
 
 enable_language(C)
 
@@ -70,7 +70,7 @@ set(PC_PRIVATE_LIBS)
 # Check if zlib installation is present
 if(MZ_ZLIB AND NOT MZ_LIBCOMP)
     find_package(ZLIB REQUIRED)
-    message(STATUS "Using ZLIB ${ZLIB_VERSION_STRING}")
+    message(STATUS "Using ZLIB ${ZLIB_VERSION}")
     list(APPEND MINIZIP_INC ${ZLIB_INCLUDE_DIRS})
     set(PC_PRIVATE_LIBS " -lz")
 endif()
@@ -86,7 +86,7 @@ endif()
 # Check if bzip2 installation is present
 if(MZ_BZIP2)
     find_package(BZip2 REQUIRED)
-    message(STATUS "Using BZIP2 ${BZIP2_VERSION_STRING}")
+    message(STATUS "Using BZIP2 ${BZip2_VERSION}")
     list(APPEND MINIZIP_INC ${BZip2_INCLUDE_DIRS})
     list(APPEND MINIZIP_DEF -DHAVE_BZIP2)
     set(PC_PRIVATE_LIBS "${PC_PRIVATE_LIBS} -lbzip2")
@@ -95,10 +95,10 @@ endif()
 # Check to see if openssl installation is present
 if(MZ_OPENSSL)
     find_package(OpenSSL REQUIRED)
-    message(STATUS "Using OpenSSL ${OPENSSL_VERSION}")
-    list(APPEND MINIZIP_INC ${OPENSSL_INCLUDE_DIR})
-    if(OPENSSL_INCLUDE_DIRS)
-        list(APPEND MINIZIP_INC ${OPENSSL_INCLUDE_DIRS})
+    message(STATUS "Using OpenSSL ${OpenSSL_VERSION}")
+    list(APPEND MINIZIP_INC ${OpenSSL_INCLUDE_DIR})
+    if(OpenSSL_INCLUDE_DIRS)
+        list(APPEND MINIZIP_INC ${OpenSSL_INCLUDE_DIRS})
     endif()
 endif()
 
@@ -204,7 +204,7 @@ if(WIN32)
 
     list(APPEND MINIZIP_SRC "mz_os_win32.c" "mz_strm_os_win32.c")
     if(MZ_PKCRYPT OR MZ_WZAES)
-        if(NOT MZ_OPENSSL AND NOT OPENSSL_FOUND AND NOT MZ_BRG)
+        if(NOT MZ_OPENSSL AND NOT OpenSSL_FOUND AND NOT MZ_BRG)
             list(APPEND MINIZIP_SRC "mz_crypt_win32.c")
         endif()
     endif()
@@ -218,7 +218,7 @@ if(UNIX)
     list(APPEND STDLIB_DEF -D_POSIX_C_SOURCE=200112L)
     list(APPEND MINIZIP_SRC "mz_os_posix.c" "mz_strm_os_posix.c")
 
-    if((MZ_PKCRYPT OR MZ_WZAES) AND NOT (MZ_OPENSSL AND OPENSSL_FOUND))
+    if((MZ_PKCRYPT OR MZ_WZAES) AND NOT (MZ_OPENSSL AND OpenSSL_FOUND))
 
         if(APPLE AND NOT MZ_BRG)
             check_include_file(CommonCrypto/CommonCrypto.h COMMONCRYPTO_FOUND)
@@ -324,7 +324,7 @@ if(NOT MZ_PKCRYPT AND NOT MZ_WZAES)
     message(STATUS "Signing not supported when encryption is disabled")
     set(MZ_SIGNING OFF)
 endif()
-if(MZ_BRG OR (MZ_OPENSSL AND NOT OPENSSL_FOUND))
+if(MZ_BRG OR (MZ_OPENSSL AND NOT OpenSSL_FOUND))
     message(STATUS "Signing not supported with current configuration")
     set(MZ_SIGNING OFF)
 endif()
@@ -379,7 +379,7 @@ if(MZ_BRG)
 endif()
 
 # Include OpenSSL
-if(MZ_OPENSSL AND OPENSSL_FOUND)
+if(MZ_OPENSSL AND OpenSSL_FOUND)
     list(APPEND MINIZIP_SRC "mz_crypt_openssl.c")
 endif()
 
@@ -416,10 +416,10 @@ if(MZ_BZIP2)
     list(APPEND MINIZIP_SRC "mz_strm_bzip.c")
     list(APPEND MINIZIP_PUBLIC_HEADERS "mz_strm_bzip.h")
 
-    if(NOT BZIP2_FOUND)
+    if(NOT BZip2_FOUND)
         list(APPEND MINIZIP_DEF -DBZ_NO_STDIO)
 
-        set(BZIP2_SRC
+        set(BZip2_SRC
             lib/bzip2/blocksort.c
             lib/bzip2/bzlib.c
             lib/bzip2/compress.c
@@ -428,13 +428,13 @@ if(MZ_BZIP2)
             lib/bzip2/huffman.c
             lib/bzip2/randtable.c)
 
-        set(BZIP2_PUBLIC_HEADERS
+        set(BZip2_PUBLIC_HEADERS
             lib/bzip2/bzlib.h
             lib/bzip2/bzlib_private.h)
 
         list(APPEND MINIZIP_INC lib/bzip2)
 
-        source_group("BZip2" FILES ${BZIP2_SRC} ${BZIP2_PUBLIC_HEADERS})
+        source_group("BZip2" FILES ${BZip2_SRC} ${BZip2_PUBLIC_HEADERS})
     endif()
 endif()
 
@@ -604,7 +604,7 @@ set(INSTALL_PKGCONFIG_DIR "${CMAKE_INSTALL_FULL_LIBDIR}/pkgconfig"
 add_library(${PROJECT_NAME}
                 ${MINIZIP_SRC} ${MINIZIP_PUBLIC_HEADERS}
                 ${BRG_SRC} ${BRG_PUBLIC_HEADERS}
-                ${BZIP2_SRC} ${BZIP2_PUBLIC_HEADERS}
+                ${BZip2_SRC} ${BZip2_PUBLIC_HEADERS}
                 ${LZMA_SRC} ${LZMA_PUBLIC_HEADERS})
 
 mz_configure_target(${PROJECT_NAME})
@@ -651,20 +651,20 @@ if(MZ_ZLIB AND NOT MZ_LIBCOMP)
     endif()
 endif()
 if(MZ_ZSTD)
-    if(ZSTD_FOUND)
-        target_link_libraries(${PROJECT_NAME} ${ZSTD_LIBRARIES})
+    if(zstd_FOUND)
+        target_link_libraries(${PROJECT_NAME} ${zstd_LIBRARIES})
     else()
         # Have to add zlib to install targets
         if(NOT DEFINED BUILD_SHARED_LIBS OR NOT ${BUILD_SHARED_LIBS})
-            set(ZSTD_TARGET libzstd_static)
+            set(zstd_TARGET libzstd_static)
         else()
-            set(ZSTD_TARGET libzstd_shared)
+            set(zstd_TARGET libzstd_shared)
         endif()
-        target_link_libraries(${PROJECT_NAME} ${ZSTD_TARGET})
+        target_link_libraries(${PROJECT_NAME} ${zstd_TARGET})
     endif()
 endif()
-if(MZ_BZIP2 AND BZIP2_FOUND)
-    target_link_libraries(${PROJECT_NAME} ${BZIP2_LIBRARIES})
+if(MZ_BZIP2 AND BZip2_FOUND)
+    target_link_libraries(${PROJECT_NAME} ${BZip2_LIBRARIES})
 endif()
 if(MZ_LIBCOMP)
     target_link_libraries(${PROJECT_NAME} compression)
@@ -672,8 +672,8 @@ endif()
 if(Iconv_FOUND AND NOT Iconv_IS_BUILT_IN)
     target_link_libraries(${PROJECT_NAME} ${Iconv_LIBRARIES})
 endif()
-if(MZ_OPENSSL AND OPENSSL_FOUND)
-    target_link_libraries(${PROJECT_NAME} ${OPENSSL_LIBRARIES})
+if(MZ_OPENSSL AND OpenSSL_FOUND)
+    target_link_libraries(${PROJECT_NAME} ${OpenSSL_LIBRARIES})
 elseif(UNIX)
     if(APPLE AND (MZ_PKCRYPT OR MZ_WZAES) AND NOT MZ_BRG)
         message(STATUS "Using CoreFoundation Framework")
-- 
2.28.0.windows.1

